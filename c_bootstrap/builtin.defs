(* Function Procedures *)
PROCEDURE ABS*(x :INTEGER) :INTEGER; BEGIN RETURN 0 END ABS;
PROCEDURE ODD*(x :INTEGER) :BOOLEAN; BEGIN RETURN FALSE END ODD;
PROCEDURE LEN*(v: ARRAY OF CHAR): INTEGER; BEGIN RETURN 0 END LEN;
PROCEDURE LSL*(x, n :INTEGER) :INTEGER; BEGIN RETURN 0 END LSL;
PROCEDURE ASR*(x, n :INTEGER) :INTEGER; BEGIN RETURN 0 END ASR;
PROCEDURE ROR*(x, n :INTEGER) :INTEGER; BEGIN RETURN 0 END ROR;

(* Type Conversions *)
PROCEDURE FLOOR*(x: REAL) :INTEGER; BEGIN RETURN 0 END FLOOR;
NATIVE PROCEDURE FLT*(x :INTEGER) :REAL; BEGIN RETURN 0.0 END FLT;
PROCEDURE ORD*(x :INTEGER); END ORD;
PROCEDURE VAL*(x :INTEGER); END VAL;
PROCEDURE CHR*(x :INTEGER) :CHAR; BEGIN RETURN 0X END CHR;

(* Proper procedures *)

PROCEDURE INC*(VAR v :INTEGER); END INC;
PROCEDURE DEC*(VAR v :INTEGER); END DEC;
PROCEDURE INCL*(VAR v :SET; x :INTEGER); END INCL;
PROCEDURE EXCL*(VAR v :SET; x :INTEGER); END EXCL;
PROCEDURE NEW*(x :INTEGER); END NEW;
NATIVE PROCEDURE ASSERT*(b :BOOLEAN); END ASSERT;
PROCEDURE PACK*(x :REAL; n :INTEGER); END PACK;
PROCEDURE UNPK*(x :REAL; n :INTEGER); END UNPK;

(* Used in Project Oberon *)
PROCEDURE LED*(v :INTEGER); END LED;
