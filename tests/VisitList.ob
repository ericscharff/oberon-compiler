(*
 * This file is part of oberon-compiler
 *
 * Copyright (C) 2018-2025  Eric Scharff
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *)

MODULE VisitTest;

IMPORT Out;

TYPE
  List = POINTER TO Cell;
  Cell = RECORD
           val: INTEGER;
           prev: List;
         END;
  VisitorState = RECORD END;
  ListVisitor = PROCEDURE(VAR state: VisitorState; val: INTEGER);

PROCEDURE AddVal(VAR cell: List; val: INTEGER);
VAR
  c: List;
BEGIN
  NEW(c);
  c.val := val;
  c.prev := cell;
  cell := c;
END AddVal;

PROCEDURE VisitAll(VAR c: List; v: ListVisitor; VAR s: VisitorState);
BEGIN
  WHILE c # NIL DO
    v(s, c.val);
    c := c.prev;
  END
END VisitAll;

PROCEDURE VisitTest;
  TYPE
    TestState = RECORD (VisitorState)  sum: INTEGER END;
  VAR
    c: List;
    s: TestState;
  PROCEDURE V(VAR state: VisitorState; val: INTEGER);
  BEGIN
    state(TestState).sum := state(TestState).sum + val
  END V;

BEGIN
  c := NIL;
  s.sum := 0;
  AddVal(c, 101);
  AddVal(c, 201);
  AddVal(c, 301);
  AddVal(c, 401);
  AddVal(c, 501);
  AddVal(c, 601);
  VisitAll(c, V, s);
  Out.Int(s.sum);
  Out.Ln
END VisitTest;

BEGIN
  VisitTest
END VisitTest.
