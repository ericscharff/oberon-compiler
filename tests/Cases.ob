(*
 * This file is part of oberon-compiler
 *
 * Copyright (C) 2018-2023  Eric Scharff
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *)

MODULE Cases;

IMPORT Out;

PROCEDURE Start;
BEGIN
  Out.Char(41X)
END Start;

PROCEDURE FancyRange(ch: CHAR);
VAR i: INTEGER;
BEGIN
  i := 1;
  CASE ch OF
    "A" .. "Z", "a" .. "z", "0" .. "9", "_": i := 2;
  END;
  Out.Int(i); Out.Ln
END FancyRange;

PROCEDURE Trial(a: INTEGER);
BEGIN
  CASE a OF
    0: Out.Int(1000)
  | 1: Out.Int(1001)
  | 2: Out.Int(1002)
  | 3: Out.Int(1003)
  | 4: Out.Int(1004)
  | 5: Out.Int(1005)
  | 8 .. 10: Out.Int(3333)
  END;
  Out.Ln
END Trial;

BEGIN
  Start;
  Trial(-5);
  Trial(33);
  Trial(0);
  Trial(1);
  Trial(2);
  Trial(3);
  Trial(4);
  Trial(5);
  Trial(6);
  Trial(7);
  Trial(8);
  Trial(10);
  FancyRange("A");
  FancyRange("E");
  FancyRange("Z");
  FancyRange("a");
  FancyRange("e");
  FancyRange("z");
  FancyRange(","); (* Smaller than 0  *)
  FancyRange("{"); (* Larger than z   *)
  FancyRange("^"); (* Between Z and a *)
END Cases.
