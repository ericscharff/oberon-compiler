(*
 * This file is part of oberon-compiler
 *
 * Copyright (C) 2018-2023  Eric Scharff
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *)

MODULE Strings;

IMPORT Out;

PROCEDURE ToLower(VAR c: ARRAY OF CHAR);
VAR i: INTEGER;
BEGIN
  i := 0;
  WHILE i < LEN(c) DO
    IF (c[i] >= "A") & (c[i] <= "Z") THEN
      c[i] := CHR(ORD(c[i]) + 32)
    END;
    i := i + 1
  END
END ToLower;

PROCEDURE Middle(s: INTEGER; VAR c: ARRAY OF CHAR; s2: INTEGER);
BEGIN
  IF (s = 81) & (s2 = 82) THEN
    ToLower(c)
  END
END Middle;

PROCEDURE WriteString(s: ARRAY OF CHAR);
VAR i: INTEGER;
BEGIN
  i := 0;
  WHILE s[i] # 0X DO
    Out.Char(s[i]);
    i := i + 1
  END;
  Out.Ln
END WriteString;

PROCEDURE Compare(a, b: ARRAY OF CHAR);
PROCEDURE Tab; BEGIN Out.Char(9X) END Tab;
BEGIN
  Out.Str("a=[");
  Out.Str(a);
  Out.Str("]"); Tab; IF LEN(a) < 3 THEN Tab END; Out.Str("b=[");
  Out.Str(b);
  Out.Str("]");
  Tab; IF LEN(b) < 3 THEN Tab END;
  IF a < b  THEN Out.Str("<  ") ELSE Out.Str("   ") END;
  IF a <= b THEN Out.Str("<= ") ELSE Out.Str("   ") END;
  IF a = b  THEN Out.Str("=  ") ELSE Out.Str("   ") END;
  IF a # b  THEN Out.Str("#  ") ELSE Out.Str("   ") END;
  IF a >= b THEN Out.Str(">= ") ELSE Out.Str("   ") END;
  IF a > b  THEN Out.Str(">  ") ELSE Out.Str("   ") END;
  Out.Ln
END Compare;

PROCEDURE Comparisons;
BEGIN
  Compare("ABCDEF", "ABCDEF");
  Compare("bBCDEF", "aBCDEF");
  Compare("aBCDEF", "bBCDEF");
  Compare("AbCDEF", "AaCDEF");
  Compare("AaCDEF", "AbCDEF");
  Compare("ABCDEb", "ABCDEa");
  Compare("ABCDEa", "ABCDEb");
  Compare("ABCDE", "ABCD");
  Compare("ABCD", "ABCDE");
  Compare("", "ABCDEF");
  Compare("ABCDEF", "");
  Compare("游린游릴游릱", "游린游릱游릴");
END Comparisons;

PROCEDURE Test;
VAR
  ca: ARRAY 10 OF CHAR;
BEGIN
  WriteString("Hello, world!");
  ca[0] := 41X;
  ca[1] := 42X;
  ca[2] := 63X;
  ca[3] := 44X;
  ca[4] := 45X;
  ca[5] := 0X;
  WriteString(ca);
  Middle(81, ca, 82);
  WriteString(ca);
END Test;

BEGIN
  Comparisons;
  Test
END Strings.
