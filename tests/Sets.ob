(*
 * This file is part of oberon-compiler
 *
 * Copyright (C) 2018-2025  Eric Scharff
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *)

MODULE Sets;

IMPORT Out;

PROCEDURE Test;
VAR
  s, s2: SET;
  i, j, k: INTEGER;
  sets: ARRAY 3 OF SET;
BEGIN
  s := {};
  Out.Int(ORD(s)); Out.Ln;
  s := {1};
  Out.Int(ORD(s)); Out.Ln;
  s := s + s;
  Out.Int(ORD(s)); Out.Ln;
  i := 1; j := 0; k := 2;
  s := {i};
  Out.Int(ORD(s)); Out.Ln;
  s := -{i};
  Out.Int(ORD(s)); Out.Ln;
  s := {i, j, k};
  Out.Int(ORD(s)); Out.Ln;
  s := {j .. k};
  Out.Int(ORD(s)); Out.Ln;
  i := 3; j := 9;
  s := {0 .. j};
  Out.Int(ORD(s)); Out.Ln;
  s := {2 .. j};
  Out.Int(ORD(s)); Out.Ln;
  s := {i .. 9};
  Out.Int(ORD(s)); Out.Ln;
  i := 0; j := 3; k := 7;
  s := {i .. j, j .. k};
  Out.Int(ORD(s)); Out.Ln;
  s := s - {7};
  Out.Int(ORD(s)); Out.Ln;
  s := {0};
  s2 := {7};
  s := s + s2;
  Out.Int(ORD(s)); Out.Ln;
  s := {0};
  s2 := {7};
  s := s - s2;
  Out.Int(ORD(s)); Out.Ln;
  s := {0};
  s2 := {7};
  s := s * s2;
  Out.Int(ORD(s)); Out.Ln;
  s := {0};
  s2 := {7};
  s := s / s2;
  Out.Int(ORD(s)); Out.Ln;
  IF 0 IN s THEN Out.Int(10) ELSE Out.Int(0) END; Out.Char(" ");
  IF i IN s THEN Out.Int(10) ELSE Out.Int(0) END; Out.Char(" ");
  IF 1 IN s THEN Out.Int(10) ELSE Out.Int(0) END; Out.Char(" ");
  IF 7 IN s THEN Out.Int(10) ELSE Out.Int(0) END; Out.Char(" ");
  IF 8 IN s THEN Out.Int(10) ELSE Out.Int(0) END;
  Out.Ln;
  sets[0] := {2};
  sets[1] := {3};
  sets[2] := {4};
  Out.Int(ORD(sets[0])); Out.Ln;
  Out.Int(ORD(sets[1])); Out.Ln;
  Out.Int(ORD(sets[2])); Out.Ln
END Test;

BEGIN
  Test
END Sets.
