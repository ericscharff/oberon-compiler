(*
 * This file is part of oberon-compiler
 *
 * Copyright (C) 2018-2025  Eric Scharff
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *)

MODULE Mandelbrot;

IMPORT Out;

CONST
  MaxIter = 20;

PROCEDURE PrintMandelbrot;
VAR
  x, y, count: INTEGER;
  cReal, cImag, zReal, zImag, zm, zn, zr2: REAL;
  display: ARRAY 22 OF CHAR;
BEGIN
  Out.Str("Mandelbrot"); Out.Ln;
  display := "..,'~!^:;[/<&?oxOX#  ";
  FOR y := -39 TO 39 DO
    FOR x := -39 TO 39 DO
      cReal := FLT(x) / 20.0;
      cImag := FLT(y) / 20.0;
      zReal := cReal;
      zImag := cImag;
      count := 0;
      zm := zReal * zReal;
      zn := zImag * zImag;
      WHILE (count < MaxIter) & ((zm + zn) <= 4.0) DO
        zm := zReal * zReal;
        zn := zImag * zImag;
        zr2 := zm - zn + cReal;
        zImag := zReal * zImag * 2.0 + cImag;
        zReal := zr2;
        INC(count)
      END;
      Out.Char(display[count]);
    END;
    Out.Ln;
  END;
END PrintMandelbrot;

PROCEDURE PrintJulia;
VAR
  x, y, count: INTEGER;
  cReal, cImag, zReal, zImag, zm, zn, zr2: REAL;
  display: ARRAY 22 OF CHAR;
BEGIN
  Out.Str("Julia"); Out.Ln;
  display := "..,'~!^:;[/<&?oxOX#  ";
  FOR y := -39 TO 39 DO
    FOR x := -39 TO 39 DO
      zReal := FLT(x) / 20.0;
      zImag := FLT(y) / 20.0;
      cReal := -0.123;
      cImag := 0.745;
      count := 0;
      zm := zReal * zReal;
      zn := zImag * zImag;
      WHILE (count < MaxIter) & ((zm + zn) <= 4.0) DO
        zm := zReal * zReal;
        zn := zImag * zImag;
        zr2 := zm - zn + cReal;
        zImag := zReal * zImag * 2.0 + cImag;
        zReal := zr2;
        INC(count)
      END;
      Out.Char(display[count]);
    END;
    Out.Ln;
  END;
END PrintJulia;

BEGIN
  PrintJulia; PrintMandelbrot
END Mandelbrot.
